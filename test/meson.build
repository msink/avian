############################################################
# avian/test
############################################################

test_jni = shared_library('test_jni',
  sources: [
    'jni.cpp',
  ],
  include_directories: avian_includes,
  cpp_args: avian_cppflags,
  link_args: avian_lflags,
)

test_java = custom_target('test_java',
  input: test_java_sources = files(
    'DefineClass.java',
    'List.java',
    'Strings.java',
    'MessageFormatTest.java',
    'Enums.java',
    'FutureTaskTest.java',
    'LinkedBlockingQueueTest.java',
    'ZipOutputStreamTest.java',
    'Switch.java',
    'Finalizers.java',
    'Subroutine.java',
    'DivideByZero.java',
    'StackOverflow.java',
    'Regex.java',
    'Dates.java',
    'Tree.java',
    'TimeUnitConversions.java',
    'Files.java',
    'Initializers.java',
    'Collections.java',
    'Datagrams.java',
    'Reflection.java',
    'OutOfMemory.java',
    'QueueHelper.java',
    'MemoryRamp.java',
    'InvokeDynamic.java',
    'Floats.java',
    'Zip.java',
    'Annotations.java',
    'Observe.java',
    'GC.java',
    'Misc.java',
    'Integers.java',
    'Buffers.java',
    'StringBuilderTest.java',
    'Logging.java',
    'Busy.java',
    'Hello.java',
    'JNI.java',
    'UrlTest.java',
    'Simple.java',
    'ConcurrentHashMapTest.java',
    'Threads.java',
    'EnumSetTest.java',
    'CompletionServiceTest.java',
    'ArrayDequeTest.java',
    'Serialize.java',
    'BufferedInputStreamTest.java',
    'Exceptions.java',
    'BitsetTest.java',
    'FormatStrings.java',
    'ArraysTest.java',
    'Sockets.java',
    'UnsafeTest.java',
    'LazyLoading.java',
    'NullPointer.java',
    'Proxies.java',
    'Longs.java',
    'DequeHelper.java',
    'References.java',
    'AllFloats.java',
    'AtomicTests.java',
    'Processes.java',
    'Trace.java',
    'FileOutput.java',
    'avian/testing/annotations/Color.java',
    'avian/testing/annotations/Test.java',
    'avian/testing/annotations/TestComplex.java',
    'avian/testing/annotations/TestEnum.java',
    'avian/testing/annotations/TestInteger.java',
    'avian/testing/Asserts.java',
    'avian/TestReflection.java',
  ),
  output: 'test_java',
  capture: true,
  command: [javac,
    '-encoding', 'UTF-8',
    '-source', '1.' + JAVA_VERSION,
    '-target', '1.' + JAVA_VERSION,
    '-classpath', meson.current_build_dir() + '/../test',
    '-d', meson.current_build_dir() + '/../test',
    '-bootclasspath', meson.current_build_dir() + '/../classpath',
    '@INPUT@'
  ],
)

test_java_2 = custom_target('test_java_2',
  input: files(
    'Subroutine.java',
  ),
  output: 'test_java_2',
  capture: true,
  command: [javac,
    '-encoding', 'UTF-8',
    '-source', '1.2',
    '-target', '1.1',
    '-XDjsrlimit=0',
    '-d', meson.current_build_dir() + '/test',
    '-bootclasspath', meson.current_build_dir() + '/classpath',
    '@INPUT@'
  ],
)

test_java_extra = custom_target('test_java_extra',
  input: files(
    'extra/SendFile.java',
    'extra/Coroutines.java',
    'extra/ComposableContinuations.java',
    'extra/Tails.java',
    'extra/DumpStats.java',
    'extra/QueryDump.java',
    'extra/DynamicWind.java',
    'extra/RuntimeExec.java',
    'extra/Sockets.java',
    'extra/Continuations.java',
    'extra/SendServer.java',
    'extra/Memory.java',
    'extra/PrintDump.java',
  ),
  output: 'test_java_extra',
  capture: true,
  command: [javac,
    '-encoding', 'UTF-8',
    '-source', '1.' + JAVA_VERSION,
    '-target', '1.' + JAVA_VERSION,
    '-d', meson.current_build_dir() + '/test',
    '-bootclasspath', meson.current_build_dir() + '/classpath',
    '@INPUT@'
  ],
)
